#include "main.h"

/**
 * _puts - buffer printing
 * @buffer: buffer
 * @size: bytes to print
 */
void _puts(char *buffer, int size)
{
	write(1, buffer, size);
}

/**
 * _memcpy - copy memory
 * @dest: destination memory
 * @src: source memory
 * @n: number of bytes to copy
 * @blen: buffer byte size
 * Return: pointer to destination memory
 */
char *_memcpy(char *dest, char *src, unsigned int n, unsigned int blen)
{
	unsigned int i;

	for (i = 0; i < n; i++)
		dest[i + blen] = src[i];
	return (dest);
}


/**
  * alloc_buffer - allocate characters to buffer, to void overflow
  * @buffer: buffer containing string to output
  * @str: string to copy into buffer
  * @slen: length of string to copy
  * @blen: length of buffer
  * @total: pointer to total character pointer
  * Return: buffer length as int
  */

int alloc_buffer(char *str, int slen, char *buffer, int blen, double *total)
{
	int size_copied = 0;

	if (slen + blen > BUFFERSIZE)
	{
		size_copied = BUFFERSIZE - blen;
		_memcpy(buffer, str, size_copied, blen);
		_puts(buffer, BUFFERSIZE);
		str += size_copied;
		_memcpy(buffer, str, slen - size_copied, 0);
		blen = slen - size_copied;
		*total += BUFFERSIZE;
	}
	else
	{
		_memcpy(buffer, str, slen, blen);
		blen += slen;
	}

	return (blen);
}


