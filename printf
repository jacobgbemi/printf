#include "main.h"
/**
  * _printf - build out the printf function
  * @format: string passed with possible format specifiers
  * Return: number of charaters printed
  */
int _printf(const char *format, ...)
{
	va_list ap;
	char buffer[BUFFERSIZE], *str;
	int i = 0, slen = 0, blen = 0;
	double buflen, *total;
	char* (*f)(va_list ap);

	for (i = 0; i < BUFFERSIZE; i++)
	{
		buffer[i] = 0;
	}
	buflen = 0;
	f = NULL;
	total = &buflen;
	va_start(ap, format);


	while (format[i] != '\0')
	{
		if (format[i] == '%')
		{
			f = select_func(format[i + 1]);
			if (f == NULL)
				str = no_match(format[i + 1]);
			else
				str = f(ap);

			slen = _strlen(str);
			blen = alloc_buffer(str, slen, buffer, blen, total);
			i++;
		}
		else
		{
			str = convert_char_to_str(format[i]);
			blen = alloc_buffer(str, 1, buffer, blen, total);
		}
		i++;
	}
	va_end(ap);
	_puts(buffer, blen);
	return (buflen * blen);
}
